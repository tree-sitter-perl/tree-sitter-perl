================================================================================
do { STMT; }
================================================================================
do { 1; 2; };
do { 3; 4 };
--------------------------------------------------------------------------------

(source_file
  (expression_statement (do_expression
    (block
      (expression_statement (number))
      (expression_statement (number)))))
  (expression_statement (do_expression
    (block
      (expression_statement (number))
      (expression_statement (number))))))
================================================================================
Anonymous array
================================================================================
[ 1, 2 ];
--------------------------------------------------------------------------------

(source_file
  (expression_statement (anonymous_array_expression
    (list_expression (number) (number)))))
================================================================================
Anonymous hash
================================================================================
+{ 1, 2 };
--------------------------------------------------------------------------------

(source_file
  (expression_statement (unary_expression
    (anonymous_hash_expression
      (list_expression (number) (number))))))
================================================================================
Assignment
================================================================================
$var = 123;
$var = 12 + 34;
$var = 12, 34;
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (assignment_expression (scalar) (number)))
  (expression_statement
    (assignment_expression (scalar) (binary_expression (number) (number))))
  (expression_statement
    (list_expression (assignment_expression (scalar) (number)) (number))))
================================================================================
Slices
================================================================================
(1, 2, 3)[0];
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (slice_expression (list_expression (number) (number) (number)) (number))))
================================================================================
Stub
================================================================================
();
--------------------------------------------------------------------------------

(source_file
  (expression_statement (stub_expression)))
================================================================================
Scalar deref
================================================================================
$$sref;
$sref->$*;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (scalar (scalar)))
  (expression_statement (scalar_deref_expression (scalar))))
================================================================================
Array deref
================================================================================
@$aref;
$aref->@*;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (array (scalar)))
  (expression_statement (array_deref_expression (scalar))))
================================================================================
Hash deref
================================================================================
%$href;
$href->%*;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (hash (scalar)))
  (expression_statement (hash_deref_expression (scalar))))
================================================================================
Amper deref
================================================================================
$cref->&*;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (amper_deref_expression (scalar))))
================================================================================
Glob deref
================================================================================
*$gref;
$gref->**;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (glob (scalar)))
  (expression_statement (glob_deref_expression (scalar))))
================================================================================
require EXPR
================================================================================
require 123;
require;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (require_expression (number)))
  (expression_statement (require_expression)))
================================================================================
Loopex
================================================================================
next;
last LOOP;
redo;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (loopex_expression))
  (expression_statement (loopex_expression (label)))
  (expression_statement (loopex_expression)))
================================================================================
goto
================================================================================
goto LABEL;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (goto_expression (label))))
================================================================================
undef
================================================================================
undef;
undef $var;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (undef_expression))
  (expression_statement (undef_expression (scalar))))
================================================================================
local
================================================================================
local $var;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (localization_expression (scalar))))
================================================================================
return
================================================================================
return;
return 1, 2, 3;
return 1, 2, 3 or die("never reached");
return unless 9001;
--------------------------------------------------------------------------------
(source_file
  (expression_statement (return_expression))
  (expression_statement (return_expression (number) (number) (number) ))
  (expression_statement
    (lowprec_logical_expression
      (return_expression (number) (number) (number) )
      (function_call_expression (function) (interpolated_string_literal))
    ))
  (expression_statement
    (postfix_unless_expression
      (return_expression)
      (number)
      ))
)
