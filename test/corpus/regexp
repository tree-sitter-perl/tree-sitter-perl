================================================================================
qr() strings
================================================================================
qr/pattern/;
qr/pattern with (parens)/;
qr/pattern with $interpolation/;
qr'pattern with no $interpolation';
qr/pattern/i;
qr/^anchored pattern$/;
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (quoted_regexp))
  (expression_statement
    (quoted_regexp))
  (expression_statement
    (quoted_regexp
      (scalar
        (varname))))
  (expression_statement
    (quoted_regexp))
  (expression_statement
    (quoted_regexp
      (quoted_regexp_modifiers)))
  (expression_statement
    (quoted_regexp)))

================================================================================
Regexp match
================================================================================
m/pattern/;
m/pattern with (parens)/;
m/pattern with $interpolation/;
m'pattern with no $interpolation';
m/pattern/i;
m/^anchored pattern$/;
m/^pattern(?:$|,)/;
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (match_regexp))
  (expression_statement
    (match_regexp))
  (expression_statement
    (match_regexp
      (scalar
        (varname))))
  (expression_statement
    (match_regexp))
  (expression_statement
    (match_regexp
      (match_regexp_modifiers)))
  (expression_statement
    (match_regexp))
  (expression_statement
    (match_regexp)))

================================================================================
Match w just solidus
================================================================================
$var =~ /pattern/;
time / 2; #comment
sum /pattern;#still pattern/;
--------------------------------------------------------------------------------

(source_file
  (expression_statement
    (binary_expression
      (scalar
        (varname))
      (match_regexp)))
  (expression_statement
    (binary_expression
      (func0op_call_expression)
      (number)))
  (comment)
  (expression_statement
    (ambiguous_function_call_expression
      (function)
      (match_regexp))))
