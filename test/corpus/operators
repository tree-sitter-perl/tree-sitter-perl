================================================================================
EXPR or EXPR
================================================================================
1 or 2;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (lowprec_logical_expression (number) (number))))
================================================================================
EXPR and EXPR
================================================================================
1 and 2;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (lowprec_logical_expression (number) (number))))
================================================================================
EXPR, EXPR
================================================================================
1, 2, 3;
1, 2,;
1,,3;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (list_expression (number) (number) (number)))
  (expression_statement (list_expression (number) (number)))
  (expression_statement (list_expression (number) (number))))
================================================================================
EXPR << EXPR
================================================================================
1 << 2;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (binary_expression left: (number) right: (number))))
================================================================================
EXPR + EXPR
================================================================================
1 + 2;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (binary_expression left: (number) right: (number))))
================================================================================
EXPR * EXPR
================================================================================
1 * 2;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (binary_expression left: (number) right: (number))))
================================================================================
EXPR ** EXPR
================================================================================
1 ** 2;
--------------------------------------------------------------------------------

(source_file
  (expression_statement (binary_expression left: (number) right: (number))))
